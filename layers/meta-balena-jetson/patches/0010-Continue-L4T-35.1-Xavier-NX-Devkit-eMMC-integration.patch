From 5111f23641b340540ddcee51a5228e3181297a40 Mon Sep 17 00:00:00 2001
From: Alexandru Costache <alexandru@balena.io>
Date: Thu, 19 Jan 2023 12:56:40 +0100
Subject: [PATCH 10/11] Continue L4T 35.1 Xavier NX Devkit eMMC integration

---
 .../files/boot0_t194_nx.bindiff               | Bin 0 -> 69440 bytes
 .../files/partition_specification194_nxde.txt |   4 +-
 .../files/resinOS-flash194_nxde.xml           |   4 +-
 .../tegra194-nxde-flash-dry_35.1.0.bb         | 222 ++++++++++++++++--
 ...-Add-hup-and-rollback-support-xav-nx.patch |  10 +-
 .../uefi/edk2-firmware-tegra_35.1.0.bbappend  |   2 +
 .../recipes-core/images/balena-image.inc      |   1 +
 .../recipes-kernel/linux/jetson-dtbs.bb       |   9 +
 ...sin-bootfiles-jetson-xavier-nx-devkit-emmc |  77 ++++++
 .../hostapp-update-hooks.bbappend             |   4 +
 10 files changed, 301 insertions(+), 32 deletions(-)
 create mode 100644 layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/files/99-resin-bootfiles-jetson-xavier-nx-devkit-emmc

diff --git a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/boot0_t194_nx.bindiff b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/boot0_t194_nx.bindiff
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..96bb2b9e5ccd0aa59e8160cce4cbf3966e5b3a95 100644
GIT binary patch
literal 69440
zcmeI53vd)g9>zNm4atGwA)F!}izu(KWOtJdAsUj+lO?hVNx*<`aW=b27P1fa5y>IW
zct(Sw0tKl$L?HsoD_qc%hc7_TGp85yge#@a0>wH#!YL(s;0yM;cV;j%2~@IyI^e#h
zdV0I3yT9&VPxt(p%Jc|prapH6&_C_Z$oEYvPFc2UL{r6>EuW+%{k$mul{1N(H;|-A
z(t{8ZNqtA|i`u20!4Ey(|J%U>#vF;+7xB@stlE(&`EM7WIKB6%wf5nqhx*Nbr`O?i
z8_s6eFJ8Z5{V~&shmLQ%<<S?52EMiBy)9pU(C6G&g!D4dx|0cs`U4F|QQwdHzSJ}K
zG)=!R^h<e&U{SYAQ^Hj{>|TwfM3Y}__f~N=nxcTm<M#U7WM^H7;Hn&)&+cQ%J*mHr
z`WmOROve(aV|ipBQSRj`oOYK#-55H@^0RYk@u4V*u(~;~t+dSTDtA<fNufGfn*$S5
z6A}|AXm!-F13MkkFD-S84J<8XX%U_>hdo`NsOMNtmLj%`p<YTo>z~}tV)tCGhQ^r-
z)y2w|+C8e`q5RP_PqEG6<E&M7Tc|{vGOR$7Qtv|f+p|at)z(=SY)tc{c4%39wPi-F
z-DUH*9WFnyyIA|QuIfskHsGnOk#mR*?g}q9j+cT@`~HsaQh)WVzf!ll*xfE&9~T<0
z(DihIYoa4Ya(`JEEnS&f7w5E-GPl#i`5kn8h^yLRb8usAeqXtxigu2kJ)dN?1{_s3
zzk{avId6sCucf6biQDGX+BiQ)e16U!@X7flGL>AFU+Zvb%N_HG!{#G4dzIa9*UA-m
z-5$HwUqf60r?!f7iL*5{4439`m8@56jt!(f&J?K7=ye){&R`%0T}pyJ#VD>wbbUC#
zMv04uJTDoj(EP!AC$6tp?>f96$n*b~>j>+eyjWc`>s{RFlGT+DEHpP9u#>ZEZmIuI
zeIYp)3<f_9vSoshNxu?996<mCK;UX7Fng1A>u+_v3*Owpzdz=N$B#9BZ8ppw<%mDT
z?fh)Y$lSG8bKlT*5V$l1Zr*ii>S<pKdth;)=S1yucbw9@<K)h#vj6F_M<?s0u=6Fm
zlrw_dOk!yX$$W}neP^DzPm_lA=+!r~$C&~#<@RVzhzm2gZ|E85x%xWG^`VUa2Zspi
z2s?ya`wq*@+Mnr0iqMU+C<+1~00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4ea
zAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00LJC0lfczg$x9m
z0RkY<Edq(FD!0seBWhF2sFQ}HPLs*Fr@X!}DZSUa)S5t4p5fhYRgS_Sa7_@nJn#R@
z@4w^yf4u+ScABu){_*~QTO#-k0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&
z00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaog=We;e!+Z
zd?g{PZg1s|og-Gh;~W^5bEomi$%{9R{k49>8&PsCLHUOiW{^x$tV#<fs@8AVx~uTz
zN0(Zj4ICS=c;vxJ@<(-p?Bls@oRe6IzD+#bpKATg2ZpDw9eUWbBw={kWB-cRlb&MD
zLDh?mqJAlDMfaRqzooS@t32_X<=KNTrD|>}nM*?7GbV(WLRoDJ$)No&rN{1#gIa&%
z@*{(aZd;NeM4cSh^5X)xAnTvM62ulvA=zZgWzg?mlYPtft)oq^Y6^4pjinO>Ntch7
zdoG4P;vsgTCFSIP<%urF)cx<@ch?|q%%PmR70!YOoiQ^6Ntc&C^ek7;#@`@Ex)G}N
zzs&7nPTpN-Zn`gbM)7QItRU$I+v)p>kM`d~yp)5LxamKC80}E&`@X&L_B*5f>5oL7
z7&PFymTDq>kelzLtlUY}n7)&gQT_0pTL0vd$oyk9Et6L_H>4SQkBSu}U0$oyko8&r
z-Jxs2tIW{Jm|Fjll`qWF{=DDv`gixF7uLoO6C_=JoU%e6?e}<PQdlvy{&L;Eg@@mX
zvApz5MejS`YPeC5bc6BA>gSUH<!|lw3{dNjZC%;dyKZ{kqCG<*)5?y<5uK<T%vb7{
zQRV@vE?;?7bQCyZqt`;$#zCz=a;h+7-%(fIw%D{e6S(9AQXuN`MN0jSbhT99Pg~R#
zr`9*NW*F{Y*Eo6SfsEcm4A~0=Ntdrs*6O1@Eu#e3?9<Y|`;@0U9aHN!afy)?@sDS3
zTjGtmZJK$MAn68G`gSrmY|XZfQ|qryJ~!?3^4X^Crw0vP*4*O`QYq#Ry4#i_p|NIb
zaCcW=wf@I_;_g1Ud#B~$Lt_$WZ}{6NDiLx))iUo5tvlUSCq%7JURyAm|I6>Qn&Lh)
zFF%obFPSgt^UD6S`F}a?KQop+>AkIaQqEINN8FDr7}=8ulKx_)zLkP;UIzXv=C0}Y
zk?W_-+9TJ;zyA8rapVa}fBD7q!<l(veQN$IEpyV0UuT=Q-&(>QNZvY+tdR8ADfQXB
zV{_0;s_D^2Es=6M3%xWfqn9j49K=O`o2Zvp3T1gYrq*v<cB*LWzn`A6dCsY-S>KK*
zA?wAQycEjil=fHncA#4S#vykU-TR|0clRU@*-<=vv>@xhAS;WZ(*C-1`ct3Uchk!g
z>+<Vv9bp;$%vUx+(&aZQ_1oHC;j6cwe|2XkJ{WVVAfqmGPoG7*UcFb4botFnebN5v
zj<Q&vn*Zak9js1rH{`Bb|9#TucXJLw(hauL@5uh@dVAFRCF754TZ=x*+1R|O>Z`Sj
z(#RIEoqVIZ|84EBuItLRsrBF7_u*jeh9!BMN;f)Z_Dh{9NV@!A<q~4pk^L1;E7bbd
z`oAZxUP$scO>WJ*VPtbJLDJ=0l=`Cm6^^2^9<_enoK<%X*#60+&4W+gSNiDQSV7Va
z9#EE3+F#+fL#^*>GU<+6OHK9v_&j+}YNVOGFX{%rR_b5O{_09=)cVgp_XU~teRS@o
z!{2CcUvmdfPKvtxDW$%=s<yTJ<hww3^eb9tMtg33F|YBSPiKDf{5T>=y8IcXe&^Qz
zj4rSLFFY}IK=V%@n^v4!;t1|fF$t0`|GiQ_K<_%`^e$6M?>`*9?>OkuN~%J4C1uWw
z$JG2^%HNiJ*K0TBG?wotzWxsv36gH`2W36K=$BKQS7jV2vtBf&)^}Jp&a40PT+5Tg
z_iEoevv34CD;DRaP_9gT?(mEKuT|W4t&~O?wNL}H`6d@@7pnCWvZ_)~J2#u3{!LCi
z|Hr7`36gG5rQd%1J)v>%(~)4_P4EAmaccdT;dO?r3C8r*iOtdTKWw&=b7C#L6v}mq
z_CHgxg>-A^l~6%@>knOVo$Y=5`=9oi74yD}ZOqu!w<Ye~)CFEa(haKgr_<*zg&{4u
zMd5|&{ulJxVIJ1H+uZa?!@QlR`W6xC!5^=B04VB*r-@P^00JNY0w4eaAOHd&00JNY
z0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00Q9=$j&iq
z3QUFcRsIMvi&e3$dI1Z9(%<{C@A|fNN2T<v<NTzkiXSYScfV`g{c>%#oG#GJ%-34p
z{*eZ7S2zL7^u(Cqn!*I5W~`<#d%C&EoNr0d=*Q_|GV)D@S>~+NgruZoO(;^7H!W4C
z)9E!iri@gBP8Va)84`4Q{doNZqfwt2qnpp7G(BTRaduHkvQd*+n3-Tm$xO_gkd>XC
z6%%al{@42IzkkR67uf#-`(I%H3+#V^{V%Zp1@^zd{uiPF8|0OSEcU->yZ?s#=ChJf
zXJTsm6Z>Ca{|oGYf&DMA{{{BH!2TE5{{s78NcJc8zvzrPi98?x0w4eaAOHd&00JNY
z0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JNY0w4eaAOHd&00JOzO%uTW
z7uWRgcD8dpX~u!n$C&~Z8of?KceXGPgDxdOpJFshl|+<#xeBM<<xkgzQdpTD{{<)V
B_KN@j

literal 0
HcmV?d00001

diff --git a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/partition_specification194_nxde.txt b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/partition_specification194_nxde.txt
index 3a6d42b..082f6ba 100644
--- a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/partition_specification194_nxde.txt
+++ b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/partition_specification194_nxde.txt
@@ -1,5 +1,5 @@
 kernel:none.bin:67108864
-kernel-dtb:[DTB_NAME].dtb:524288
+kernel-dtb:[DTB_NAME]_sigheader.dtb.encrypt:524288
 reserved_for_chain_A_user:none.bin:163010560
 secure-os_b:tos-optee_t194_sigheader.img.encrypt:2621440
 eks_b:eks_sigheader.img.encrypt:65536
@@ -9,5 +9,5 @@ sce-fw_b:none.bin:1048576
 bpmp-fw_b:bpmp-2_t194_sigheader.bin.encrypt:1572864
 bpmp-fw-dtb_b:tegra194-a02-bpmp-p2888-a04_lz4_sigheader.dtb.encrypt:1048576
 kernel_b:none.bin:67108864
-kernel-dtb_b:[DTB_NAME].dtb:524288
+kernel-dtb_b:[DTB_NAME]_sigheader.dtb.encrypt:524288
 reserved_for_chain_B_user:none.bin:163010560
diff --git a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/resinOS-flash194_nxde.xml b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/resinOS-flash194_nxde.xml
index 1a8047c..dbe9f5f 100644
--- a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/resinOS-flash194_nxde.xml
+++ b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/files/resinOS-flash194_nxde.xml
@@ -156,7 +156,7 @@
             <file_system_attribute> 0 </file_system_attribute>
             <allocation_attribute> 8 </allocation_attribute>
             <percent_reserved> 0 </percent_reserved>
-            <filename> DTB_NAME </filename>
+            <filename> tegra194-p3668-all-p3509-0000.dtb </filename>
             <description> **Required.** Chain A; contains Bootloader device tree blob
               (DTB). </description>
         </partition>
@@ -370,7 +370,7 @@
             <file_system_attribute> 0 </file_system_attribute>
             <allocation_attribute> 8 </allocation_attribute>
             <percent_reserved> 0 </percent_reserved>
-            <filename> DTB_NAME </filename>
+            <filename> tegra194-p3668-all-p3509-0000.dtb </filename>
             <description> **Required.** Chain B; contains Bootloader device tree blob
               (DTB). </description>
         </partition>
diff --git a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/tegra194-nxde-flash-dry_35.1.0.bb b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/tegra194-nxde-flash-dry_35.1.0.bb
index a3977d1..58fa7d3 100644
--- a/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/tegra194-nxde-flash-dry_35.1.0.bb
+++ b/layers/meta-balena-jetson/recipes-bsp/tegra-binaries/tegra194-nxde-flash-dry_35.1.0.bb
@@ -5,7 +5,7 @@ LIC_FILES_CHKSUM = "file://${BALENA_COREBASE}/COPYING.Apache-2.0;md5=89aea4e17d9
 
 IMAGE_ROOTFS_ALIGNMENT ?= "4"
 
-BOOT_BINDIFF="boot0_t194_nx_sd.bindiff"
+BOOT_BINDIFF="boot0_t194_nx.bindiff"
 
 DEPENDS = " \
     coreutils-native \
@@ -16,8 +16,9 @@ DEPENDS = " \
     tegra-flashtools-native \
     dosfstools-native \
     python3-pyyaml-native \
+    dtc-native \
     mtools-native \
-    "
+"
 
 inherit deploy python3native perlnative l4t_bsp
 
@@ -77,6 +78,21 @@ BOOTFILES=" \
     xusb_sil_rel_fw \
 "
 
+DEVICE_CONFIG="tegra19x-mb1-bct-device-qspi-p3668.cfg"
+MISC_COLD_BOOT_CONFIG="tegra194-mb1-bct-misc-l4t.cfg"
+MISC_CONFIG="tegra194-mb1-bct-misc-flash.cfg"
+PINMUX_CONFIG="tegra19x-mb1-pinmux-p3668-a01.cfg"
+GPIOINT_CONFIG="tegra194-mb1-bct-gpioint-p3668-0001-a00.cfg"
+PMIC_CONFIG="tegra194-mb1-bct-pmic-p3668-0001-a00.cfg"
+PMC_CONFIG="tegra19x-mb1-padvoltage-p3668-a01.cfg"
+PROD_CONFIG="tegra19x-mb1-prod-p3668-0001-a00.cfg"
+SCR_CONFIG="tegra194-mb1-bct-scr-cbb-mini-p3668.cfg"
+SCR_COLD_BOOT_CONFIG="tegra194-mb1-bct-scr-cbb-mini-p3668.cfg"
+BR_CMD_CONFIG="tegra194-mb1-bct-reset-p3668-0001-a00.cfg"
+DEV_PARAMS="tegra194-br-bct-qspi-l4t.cfg,tegra194-br-bct_b-qspi-l4t.cfg"
+
+BIN="mb2_bootloader nvtboot_recovery_t194.bin; mts_preboot preboot_c10_prod_cr.bin; mts_mce mce_c10_prod_cr.bin; mts_proper mts_c10_prod_cr.bin; bpmp_fw bpmp-2_t194.bin; bpmp_fw_dtb tegra194-a02-bpmp-p3668-a00_lz4.dtb; spe_fw spe_t194.bin; tos tos-optee_t194.img; eks eks.img; bootloader_dtb tegra194-p3668-all-p3509-0000.dtb"
+
 signfile() {
     local destdir="${WORKDIR}/tegraflash"
     local lnxfile="${LNXFILE}"
@@ -85,21 +101,32 @@ signfile() {
     export BOARDID=${TEGRA_BOARDID}
     export FAB=${TEGRA_FAB}
     export localbootfile=boot.img
-
+    pwd
     export CHIPREV=${TEGRA_CHIPREV}
     export sdramcfg=${MACHINE}.cfg,${MACHINE}-override.cfg
-
     ./tegraflash.py --bl nvtboot_recovery_cpu_t194.bin \
-        --sdram_config tegra194-mb1-bct-memcfg-p2888.cfg,tegra194-memcfg-sw-override.cfg  \
-        --odmdata 0x9190000  \
-        --overlay_dtb L4TConfiguration.dtbo,L4TRootfsInfo.dtbo,tegra194-p2822-camera-dual-imx274-overlay.dtbo,tegra194-p2822-camera-e3331-overlay.dtbo,tegra194-p2822-camera-e3333-overlay.dtbo,tegra194-p2822-camera-imx185-overlay.dtbo,tegra194-p2822-camera-imx390-overlay.dtbo,tegra194-p2888-0005-overlay.dtbo,tegra194-p2888-0001-p2822-0000-overlay.dtbo  \
-        --bldtb ${DTBFILE} \
+        --sdram_config tegra194-mb1-bct-memcfg-p3668-0001-a00.cfg,tegra194-memcfg-sw-override.cfg  \
+        --odmdata 0xB8190000   \
+        --overlay_dtb L4TConfiguration.dtbo,tegra194-p3668-p3509-overlay.dtbo,L4TRootfsInfo.dtbo  \
+        --bldtb tegra194-p3668-all-p3509-0000.dtb \
         --applet mb1_t194_prod.bin --cmd "sign" \
         --soft_fuses tegra194-mb1-soft-fuses-l4t.cfg  \
-        --cfg flash.xml --chip 0x19 --uphy_config tegra194-mb1-uphy-lane-p2888-0000-p2822-0000.cfg \
-        --minratchet_config tegra194-mb1-bct-ratchet-p2888-0000-p2822-0000.cfg \
-        --device_config tegra19x-mb1-bct-device-sdmmc.cfg --misc_cold_boot_config tegra194-mb1-bct-misc-l4t.cfg --misc_config tegra194-mb1-bct-misc-flash.cfg --pinmux_config tegra19x-mb1-pinmux-p2888-0000-a04-p2822-0000-b01.cfg --gpioint_config tegra194-mb1-bct-gpioint-p2888-0000-p2822-0000.cfg --pmic_config tegra194-mb1-bct-pmic-p2888-0001-a04-E-0-p2822-0000.cfg --pmc_config tegra19x-mb1-padvoltage-p2888-0000-a00-p2822-0000-a00.cfg --prod_config tegra19x-mb1-prod-p2888-0000-p2822-0000.cfg --scr_config tegra194-mb1-bct-scr-cbb-mini.cfg --scr_cold_boot_config tegra194-mb1-bct-scr-cbb-mini.cfg --br_cmd_config tegra194-mb1-bct-reset-p2888-0000-p2822-0000.cfg --dev_params tegra194-br-bct-sdmmc.cfg,tegra194-br-bct_b-sdmmc.cfg  --bin "mb2_bootloader nvtboot_recovery_t194.bin; mts_preboot preboot_c10_prod_cr.bin; mts_mce mce_c10_prod_cr.bin; mts_proper mts_c10_prod_cr.bin; bpmp_fw bpmp-2_t194.bin; bpmp_fw_dtb tegra194-a02-bpmp-p2888-a04_lz4.dtb; spe_fw spe_t194.bin; tos tos-optee_t194.img; eks eks.img; bootloader_dtb ${DTBFILE}"   --secondary_gpt_backup  --bct_backup  --boot_chain A 
-
+        --cfg flash.xml --chip 0x19 \
+        --minratchet_config tegra194-mb1-bct-ratchet-p3668.cfg \
+        --device_config ${DEVICE_CONFIG} \
+        --misc_cold_boot_config ${MISC_COLD_BOOT_CONFIG} \
+        --misc_config ${MISC_CONFIG} \
+        --pinmux_config ${PINMUX_CONFIG} \
+        --gpioint_config ${GPIOINT_CONFIG} \
+        --pmic_config ${PMIC_CONFIG} \
+        --pmc_config ${PMC_CONFIG} \
+        --prod_config ${PROD_CONFIG} \
+        --scr_config ${SCR_CONFIG} \
+        --scr_cold_boot_config ${SCR_COLD_BOOT_CONFIG} \
+        --br_cmd_config ${BR_CMD_CONFIG} \
+        --dev_params ${DEV_PARAMS}  \
+        --bin "${BIN}" \
+        --secondary_gpt_backup  --bct_backup  --boot_chain A
 }
 
 do_configure() {
@@ -121,6 +148,9 @@ do_configure() {
     fi
     cp "${DEPLOY_DIR_IMAGE}/uefi_jetson.bin" ./uefi_jetson.bin
     cp "${DEPLOY_DIR_IMAGE}/tos-${MACHINE}.img" ./${TOSIMGFILENAME}
+    cp "${STAGING_DATADIR}"/tegraflash/nvdisp-init.bin ./nvdisp-init.bin.default
+    truncate --size=393216 ./nvdisp-init.bin.default
+    cat ./uefi_jetson.bin  >> ./nvdisp-init.bin.default
     for f in ${BOOTFILES}; do
         cp "${STAGING_DATADIR}/tegraflash/$f" .
     done
@@ -137,7 +167,6 @@ do_configure() {
         cp $f .
     done
     cp -r ${DEPLOY_DIR_IMAGE}/*.dtbo .
-    cp -r ${DEPLOY_DIR_IMAGE}/*.dtb .
     for dtbo in ${DTB_OVERLAYS}; do
         cp "${TMPDIR}/work-shared/L4T-${L4T_BSP_ARCH}-${PV}-${PR}/Linux_for_Tegra/kernel/dtb/${dtbo}" .
     done
@@ -150,7 +179,24 @@ do_configure() {
     sed -i "s, DTB_NAME, ${DTBFILE},g" flash.xml.in
 
     sed -i -e "s/\[DTB_NAME\]/$(echo ${DTBFILE} | cut -d '.' -f 1)/g" ${WORKDIR}/partition_specification194_nxde.txt
-
+    bldtbchosenargs="console=ttyTCU0,115200"
+    bldtbdtsname="/dvs/git/dirty/git-master_linux/kernel/kernel-5.10/arch/arm64/boot/dts/../../../../../../hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-0001-p3509-0000.dts"
+    bldtboname="/dvs/git/dirty/git-master_linux/kernel/kernel-5.10/arch/arm64/boot/dts/../../../../../../hardware/nvidia/platform/t19x/jakku/kernel-dts/tegra194-p3668-p3509-overlay.dts"
+    compatible="nvidia,p3449-0000+p3668-0001\0nvidia,p3509-0000+p3668-0001\0nvidia,tegra194";
+    dtbbuildtime="Aug 10 2022\020:31:55"
+    dtboname="Jetson Xavier NX Overlay Support"
+    dtbocompat="nvidia,tegra194"
+    cp ${DEPLOY_DIR_IMAGE}/tegra194-p3668-all-p3509-0000.dtb ./tegra194-p3668-all-p3509-0000.dtb
+    # Do not overide this hardcoded dtb for carrier boards, this is used for bldtb in boot0.img
+    fdtput -t s tegra194-p3668-all-p3509-0000.dtb / "nvidia,dtsfilename" $bldtbdtsname
+    fdtput -t s tegra194-p3668-all-p3509-0000.dtb /chosen bootargs $bldtbchosenargs
+    fdtput -t s tegra194-p3668-all-p3509-0000.dtb / compatible $compatible
+    fdtput -t s tegra194-p3668-all-p3509-0000.dtb / "nvidia,dtbbuildtime" "None"
+    fdtput -t s tegra194-p3668-p3509-overlay.dtbo / "nvidia,dtbbuildtime" $dtbbuildtime
+    fdtput -t s tegra194-p3668-p3509-overlay.dtbo / "nvidia,dtsfilename" $bldtboname
+    fdtput -t s tegra194-p3668-p3509-overlay.dtbo / "overlay-name" $dtboname
+    fdtput -t s tegra194-p3668-p3509-overlay.dtbo / "compatible" $dtbocompat
+    fdtget tegra194-p3668-all-p3509-0000.dtb -t s / "nvidia,dtbbuildtime" 
     sed -e"s,MB1FILE,mb1_b_t194_prod.bin,2" flash.xml.in | \
         sed \
         -e"s,LNXFILE_b,$lnxfile," \
@@ -161,7 +207,7 @@ do_configure() {
         -e"s,MTSPROPER,mts_c10_prod_cr.bin," \
         -e"s,MB1FILE,mb1_t194_prod.bin," \
         -e"s,BPFFILE,bpmp-2_t194.bin," \
-        -e"s,TBCFILE,uefi_jetson.bin," \
+        -e"s,TBCFILE,nvdisp-init.bin.default," \
         -e"s,CAMERAFW,camera-rtcpu-t194-rce.img," \
         -e"s,BPFDTB_FILE,tegra194-a02-bpmp-p2888-a04_lz4.dtb," \
         -e"s,DRAMECCTYPE,dram_ecc," -e"s,DRAMECCFILE,dram-ecc-t194.bin," -e"s,DRAMECCNAME,dram-ecc-fw," \
@@ -176,7 +222,6 @@ do_configure() {
         -e"s,APPUUID_b,," -e"s,APPUUID,," \
         -e"s,ESP_FILE,esp.img," -e"/VARSTORE_FILE/d" \
         > flash.xml
-    # prep env for tegraflash
 
 #    ln -sf ${STAGING_BINDIR_NATIVE}/tegra186-flash/rollback_parser.py ./rollback/
 #    ln -snf ${STAGING_DATADIR}/nv_tegra/rollback/t${@d.getVar('NVIDIA_CHIP')[2:]}x ./rollback/
@@ -192,29 +237,159 @@ do_configure() {
     signfile ""
 
     # Needed to embedd plain initramfs kernel and dtb to main image
-    cp ${LNXFILE} ${DEPLOY_DIR_IMAGE}/bootfiles/Image
     cp ${DTBFILE} ${DEPLOY_DIR_IMAGE}/bootfiles/
+    fdtget ${DEPLOY_DIR_IMAGE}/bootfiles/${DTBFILE} -t s / "nvidia,dtbbuildtime"
     cp ${WORKDIR}/resinOS-flash194_nxde.xml ${DEPLOY_DIR_IMAGE}/bootfiles/flash.xml
     cp -r signed/* ${DEPLOY_DIR_IMAGE}/bootfiles/
 
-    dd if=/dev/zero of=boot0.img bs=8388608 count=1
-    #TODO: Signed binary
+    cp ${WORKDIR}/${BOOT_BINDIFF} .
+    dd if=/dev/zero count=1 bs=33554432 | tr "\000" "\377" > boot0.img
+
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/br_bct_BR.bct of=boot0.img conv=notrunc
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/br_bct_BR.bct of=boot0.img seek=4096 bs=1 conv=notrunc
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/br_bct_BR.bct of=boot0.img seek=32768 bs=1 conv=notrunc
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/br_bct_BR.bct of=boot0.img seek=65536 bs=1 conv=notrunc
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/br_bct_BR.bct of=boot0.img seek=98304 bs=1 conv=notrunc
+
+    # mb1 (a + b)
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mb1_t194_prod_aligned_sigheader.bin.encrypt of=boot0.img seek=131072 bs=1 conv=notrunc
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mb1_t194_prod_aligned_sigheader.bin.encrypt of=boot0.img seek=393216 bs=1 conv=notrunc
+
+    #MB1_BCT
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mb1_cold_boot_bct_MB1_sigheader.bct.encrypt of=boot0.img seek=655360 bs=1 conv=notrunc
+
+    #MEM_BCT
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mem_coldboot_sigheader.bct.encrypt of=boot0.img seek=720896 bs=1 conv=notrunc
+
+    #spe_fw
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/spe_t194_sigheader.bin.encrypt of=boot0.img seek=983040 bs=1 conv=notrunc
+
+    #mb2
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/nvtboot_t194_sigheader.bin.encrypt of=boot0.img seek=1245184 bs=1 conv=notrunc
+
+    #mts-preboot
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/preboot_c10_prod_cr_sigheader.bin.encrypt of=boot0.img seek=1507328 bs=1 conv=notrunc
+
+    #mts-mce
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mce_c10_prod_cr_sigheader.bin.encrypt of=boot0.img seek=1572864 bs=1 conv=notrunc
+
+    #mts-proper
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mts_c10_prod_cr_sigheader.bin.encrypt of=boot0.img seek=1769472 bs=1 conv=notrunc
+
+    #sc7
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/warmboot_t194_prod_sigheader.bin.encrypt of=boot0.img seek=5963776 bs=1 conv=notrunc
+
+    #xusb-fw
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/xusb_sil_rel_fw_sigheader.encrypt of=boot0.img seek=6094848 bs=1 conv=notrunc
+
+    #cpu-bootloader (nvdisp_init + uefi_jetson.bin
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/nvdisp-init.bin_sigheader.default.encrypt of=boot0.img seek=6291456 bs=1 conv=notrunc
+
+    #bootloader-dtb
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/tegra194-p3668-all-p3509-0000_sigheader.dtb.encrypt of=boot0.img seek=10485760 bs=1 conv=notrunc
 
+    #secure os
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/tos-optee_t194_sigheader.img.encrypt of=boot0.img seek=10944512 bs=1 conv=notrunc
+
+    #eks
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/eks_sigheader.img.encrypt of=boot0.img seek=13565952 bs=1 conv=notrunc
+
+    #adsp fw
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/adsp-fw_sigheader.bin.encrypt of=boot0.img seek=13631488 bs=1 conv=notrunc
+
+    #rce-fw
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/camera-rtcpu-t194-rce_sigheader.img.encrypt of=boot0.img seek=14680064 bs=1 conv=notrunc
+
+    #sce-fw, not written by BSP
+    #dd if=${DEPLOY_DIR_IMAGE}/bootfiles/camera-rtcpu-t194-rce_sigheader.img.encrypt of=boot0.img seek=15728640 bs=1 conv=notrunc
+
+    #bpmp-fw
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/bpmp-2_t194_sigheader.bin.encrypt of=boot0.img seek=16777216 bs=1 conv=notrunc
+
+    #bpmp-fw-dtb
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/tegra194-a02-bpmp-p3668-a00_lz4_sigheader.dtb.encrypt of=boot0.img seek=18350080 bs=1 conv=notrunc
+
+    #MB1_BCT_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mb1_cold_boot_bct_MB1_sigheader.bct.encrypt of=boot0.img seek=21495808 bs=1 conv=notrunc
+
+    #MEM_BCT_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mem_coldboot_sigheader.bct.encrypt of=boot0.img seek=21561344 bs=1 conv=notrunc
+
+    #spe_fw_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/spe_t194_sigheader.bin.encrypt of=boot0.img seek=21823488 bs=1 conv=notrunc
+
+    #mb2_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/nvtboot_t194_sigheader.bin.encrypt of=boot0.img seek=22085632 bs=1 conv=notrunc
+
+    #mts-preboot_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/preboot_c10_prod_cr_sigheader.bin.encrypt of=boot0.img seek=22347776 bs=1 conv=notrunc
+
+    #mts-mce_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mce_c10_prod_cr_sigheader.bin.encrypt of=boot0.img seek=22413312 bs=1 conv=notrunc
+
+    #mts-proper_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/mts_c10_prod_cr_sigheader.bin.encrypt of=boot0.img seek=22609920 bs=1 conv=notrunc
+
+    #sc7_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/warmboot_t194_prod_sigheader.bin.encrypt of=boot0.img seek=26804224 bs=1 conv=notrunc
+
+    #xusb-fw_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/xusb_sil_rel_fw_sigheader.encrypt of=boot0.img seek=26935296 bs=1 conv=notrunc
+
+    #cpu-bootloader_b (nvdisp_init + uefi_jetson.bin
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/nvdisp-init.bin_sigheader.default.encrypt of=boot0.img seek=27131904 bs=1 conv=notrunc
+
+    #bootloader-dtb_b
+    dd if=${DEPLOY_DIR_IMAGE}/bootfiles/tegra194-p3668-all-p3509-0000_sigheader.dtb.encrypt of=boot0.img seek=31326208 bs=1 conv=notrunc
+
+    # Patch resulting binary to resemble the one on the flashed device
+    dd if=${BOOT_BINDIFF} skip=0 seek=131088 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=32 seek=134080 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=64 seek=10485776 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=96 seek=10488800 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=128 seek=10821632 bs=1 count=64 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=192 seek=10821712 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=224 seek=10822768 bs=1 count=1040 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=1264 seek=31326224 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=1296 seek=31329248 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=1328 seek=31662080 bs=1 count=64 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=1392 seek=31662160 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=1424 seek=31662400 bs=1 count=64 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=1488 seek=31663216 bs=1 count=1040 of=boot0.img conv=notrunc
+    # Jump over UEFI variables to boot directly the Balena image
+    dd if=${BOOT_BINDIFF} skip=2528 seek=32702464 bs=1 count=32 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=2560 seek=33161216 bs=1 count=32768 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=35328 seek=33292288 bs=1 count=16896 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=52224 seek=33357824 bs=1 count=128 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=52352 seek=33423360 bs=1 count=128 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=52480 seek=33537536 bs=1 count=16896 of=boot0.img conv=notrunc
+    dd if=${BOOT_BINDIFF} skip=69376 seek=10821952 bs=1 count=64 of=boot0.img conv=notrunc
     cp boot0.img ${DEPLOY_DIR_IMAGE}/bootfiles/
 }
 
 
 do_install() {
     install -d ${D}/${BINARY_INSTALL_PATH}
-    cp -r ${S}/tegraflash/signed/* ${D}/${BINARY_INSTALL_PATH}
-    rm ${D}/${BINARY_INSTALL_PATH}/boot*im* || true
-    cp ${WORKDIR}/partition_specification194_nxde.txt ${D}/${BINARY_INSTALL_PATH}/ 
+    #cp -r ${S}/tegraflash/signed/* ${D}/${BINARY_INSTALL_PATH}
+    # Clear signed kernel images
+    #rm ${D}/${BINARY_INSTALL_PATH}/boot*im* || true
+    #rm ${D}/${BINARY_INSTALL_PATH}/Image || true
+    cp ${WORKDIR}/partition_specification194_nxde.txt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/boot0.img ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/tos-optee_t194_sigheader.img.encrypt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/eks_sigheader.img.encrypt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/adsp-fw_sigheader.bin.encrypt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/camera-rtcpu-t194-rce_sigheader.img.encrypt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/bpmp-2_t194_sigheader.bin.encrypt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/tegra194-a02-bpmp-p2888-a04_lz4_sigheader.dtb.encrypt ${D}/${BINARY_INSTALL_PATH}/
+    cp ${DEPLOY_DIR_IMAGE}/bootfiles/${DTBNAME}_sigheader.dtb.encrypt ${D}/${BINARY_INSTALL_PATH}/
 }
 
 do_deploy() {
     rm -rf ${DEPLOY_DIR_IMAGE}/$(basename ${BINARY_INSTALL_PATH})
     mkdir -p ${DEPLOY_DIR_IMAGE}/$(basename ${BINARY_INSTALL_PATH})
-    cp -r ${D}/${BINARY_INSTALL_PATH}/* ${DEPLOY_DIR_IMAGE}/$(basename ${BINARY_INSTALL_PATH})
+    #cp -r ${D}/${BINARY_INSTALL_PATH}/* ${DEPLOY_DIR_IMAGE}/$(basename ${BINARY_INSTALL_PATH})
+    cp -r ${S}/tegraflash/signed/* ${DEPLOY_DIR_IMAGE}/$(basename ${BINARY_INSTALL_PATH})
     cp ${WORKDIR}/partition_specification194_nxde.txt ${DEPLOY_DIR_IMAGE}/$(basename ${BINARY_INSTALL_PATH})
 }
 
@@ -230,7 +405,6 @@ INHIBIT_PACKAGE_DEBUG_SPLIT = "1"
 do_install[nostamp] = "1"
 do_deploy[nostamp] = "1"
 do_configure[nostamp] = "1"
-
 do_configure[depends] += " tegra-binaries:do_preconfigure"
 do_configure[depends] += " virtual/kernel:do_deploy \
                            virtual/bootloader:do_deploy \
diff --git a/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra/0007-Add-hup-and-rollback-support-xav-nx.patch b/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra/0007-Add-hup-and-rollback-support-xav-nx.patch
index d2c78de..13f73f7 100644
--- a/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra/0007-Add-hup-and-rollback-support-xav-nx.patch
+++ b/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra/0007-Add-hup-and-rollback-support-xav-nx.patch
@@ -14,6 +14,8 @@ is the same as the one that exists in balenaOS u-boot and is
 compatible with the dtb selection mechanism implemented in the
 Supervisor for the rest of the boards that use u-boot.
 
+This patch uses the Xavier NX Devkit eMMC partition layout.
+
 Upstream-status: Inappropriate [configuration]
 Signed-off-by: Alexandru Costache <alexandru@balena.io>
 Index: edk2-tegra/edk2-nvidia/Silicon/NVIDIA/Application/L4TLauncher/L4TLauncher.c
@@ -458,8 +460,8 @@ Index: edk2-tegra/edk2-nvidia/Silicon/NVIDIA/Application/L4TLauncher/L4TLauncher
 +    CleanLine = CleanExtLinuxLine (FileLine);
 +    if (*CleanLine != CHAR_NULL) {
 +      if (StrStr(CleanLine, L"resin_root_part=")) {
-+       *RootPart = StrDecimalToUintn(CleanLine + 16);
-+       Print(L"RootPart is %d\r\n", *RootPart);
++       *RootPart = StrHexToUintn(CleanLine + 16);
++       Print(L"RootPart is 0x%x\r\n", *RootPart);
 +      } else if (StrStr(CleanLine, L"upgrade_available=")) {
 +        *UpgradeAvailable = StrDecimalToUintn(CleanLine + 18);
 +        Print(L"UpgradeAvailable is %d\r\n", *UpgradeAvailable);
@@ -565,8 +567,8 @@ Index: edk2-tegra/edk2-nvidia/Silicon/NVIDIA/Application/L4TLauncher/L4TLauncher
 +#define BALENA_BOOT_CONF_PATH          L"resinOS_uEnv.txt"
 +#define BALENA_BOOTCOUNT_FILE_PATH     L"bootcount.env"
 +#define MAX_RESINOS_UENV_SIZE          256
-+#define BALENA_ROOTFS_INDEX_A          7
-+#define BALENA_ROOTFS_INDEX_B          8
++#define BALENA_ROOTFS_INDEX_A          16
++#define BALENA_ROOTFS_INDEX_B          17
 +#define BALENA_OS_BC_LIM               3
 +#define BALENA_EXTRA_UENV_FILE         L"extra_uEnv.txt"
  #define BOOTIMG_BASE_NAME              L"kernel"
diff --git a/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra_35.1.0.bbappend b/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra_35.1.0.bbappend
index 6a6adda..b5399ab 100644
--- a/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra_35.1.0.bbappend
+++ b/layers/meta-balena-jetson/recipes-bsp/uefi/edk2-firmware-tegra_35.1.0.bbappend
@@ -25,4 +25,6 @@ do_deploy:append() {
      cp ${WORKDIR}/build/images/BOOTAA64.efi ${DEPLOYDIR}/bootfiles/EFI/BOOT/BOOTAA64.efi
 }
 
+# We generate the final nvdisp-init.bin file in tegra194-flash* using
+# the original one provided in the tegra BSP archive
 NVDISPLAY_INIT_DEFAULT:tegra194=""
diff --git a/layers/meta-balena-jetson/recipes-core/images/balena-image.inc b/layers/meta-balena-jetson/recipes-core/images/balena-image.inc
index 8cb9009..2d680e6 100644
--- a/layers/meta-balena-jetson/recipes-core/images/balena-image.inc
+++ b/layers/meta-balena-jetson/recipes-core/images/balena-image.inc
@@ -51,6 +51,7 @@ IMAGE_INSTALL:append:jetson-xavier-nx-devkit-emmc = " \
     tegra-nvfancontrol \
     l4t-launcher-extlinux \
     tegra194-nxde-flash-dry \
+    jetson-dtbs \
 "
 
 IMAGE_INSTALL:append:jetson-xavier-nx-devkit = " \
diff --git a/layers/meta-balena-jetson/recipes-kernel/linux/jetson-dtbs.bb b/layers/meta-balena-jetson/recipes-kernel/linux/jetson-dtbs.bb
index 5538cd8..da70ade 100644
--- a/layers/meta-balena-jetson/recipes-kernel/linux/jetson-dtbs.bb
+++ b/layers/meta-balena-jetson/recipes-kernel/linux/jetson-dtbs.bb
@@ -31,3 +31,12 @@ FILES:${PN}:jetson-xavier += " \
         /boot/tegra234-p3701-0004-p3737-0000.dtb \
 "
 
+do_install:jetson-xavier-nx-devkit-emmc() {
+        install -d ${D}/boot/
+        install -m 0644 "${DEPLOY_DIR_IMAGE}/${DTBNAME}" "${D}/boot/${DTBNAME}"
+}
+
+FILES:${PN}:jetson-xavier-nx-devkit-emmc += " \
+        /boot/tegra194-p3668-all-p3509-0000.dtb \
+"
+
diff --git a/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/files/99-resin-bootfiles-jetson-xavier-nx-devkit-emmc b/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/files/99-resin-bootfiles-jetson-xavier-nx-devkit-emmc
new file mode 100644
index 0000000..d89e37c
--- /dev/null
+++ b/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/files/99-resin-bootfiles-jetson-xavier-nx-devkit-emmc
@@ -0,0 +1,77 @@
+#!/bin/sh
+set -o errexit
+
+# Script which writes the appropriate
+# device tree with embedded cmdline
+# and updates the kernel, as well as
+# the rest of the bootloader binaries
+
+. /usr/libexec/os-helpers-fs
+
+DURING_UPDATE=${DURING_UPDATE:-0}
+declare -a UPDATED_PARTITIONS=()
+bootloader_device="/dev/mtdblock0"
+bootloader_blob="/opt/tegra-binaries/boot0.img"
+partspec="/opt/tegra-binaries/partition_specification194_nxde.txt"
+
+info_log()
+{
+    echo "[INFO] $@"
+}
+
+
+update_needed() {
+    current_update_file=${1}
+    device=${2}
+        update_size=$(ls -al $current_update_file | awk '{print $5}')
+        update_md5sum=$(md5sum $current_update_file | awk '{print $1'})
+        existing_md5sum=$(dd if=$device bs=1 count=$update_size status=none | md5sum | awk '{print $1}')
+
+        if [ ! "$existing_md5sum" = "$update_md5sum" ]; then
+            echo 1
+        else
+            echo 0
+        fi
+}
+
+
+partitions=$(cat "${partspec}")
+
+for n in ${partitions}; do
+    part_name=$(echo $n | cut -d ':' -f 1)
+    file_name=$(echo $n | cut -d ':' -f 2)
+
+    if [ -z "${part_name##*_b}" ] || [ $file_name = "none.bin" ]; then
+        continue
+    fi
+
+    file_path=$(get_state_path_from_label $part_name)
+
+    if [ "x$file_path" = "x" ]; then
+        continue
+    fi
+
+    dst="${file_path}"
+    src="/opt/tegra-binaries/$file_name"
+    if [ -e ${dst} ]; then
+        if [ $(update_needed $src $dst) -eq 1 ]; then
+            info_log "Will update ${dst} ..."
+            dd if=${src} of="${dst}"
+            info_log "Updated ${dst}"
+        else
+            info_log "No need to update ${dst}"
+        fi
+    else
+        info_log "Partition ${dst} not found"
+    fi
+done
+
+# These never match because tegra bootloaders always
+# write to the SPI flash
+info_log "Will update bootloader device"
+flash_erase /dev/mtd0 0 0 || true
+dd if=$bootloader_blob of=$bootloader_device bs=512K
+
+# Sync internal memory
+sync /dev/mmcblk0
+sync /dev/mtdblock0
diff --git a/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/hostapp-update-hooks.bbappend b/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/hostapp-update-hooks.bbappend
index fe0394f..7b44593 100644
--- a/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/hostapp-update-hooks.bbappend
+++ b/layers/meta-balena-jetson/recipes-support/hostapp-update-hooks/hostapp-update-hooks.bbappend
@@ -13,3 +13,7 @@ HOSTAPP_HOOKS:append:jetson-xavier    = " 99-resin-uboot \
 DEPENDS:append:jetson-agx-orin-devkit = " tegra234-flash-dry"
 
 DEPENDS:append:jetson-xavier = " tegra194-flash-dry"
+
+
+HOSTAPP_HOOKS:append:jetson-xavier-nx-devkit-emmc = " 99-resin-uboot 99-resin-bootfiles-jetson-xavier-nx-devkit-emmc"
+DEPENDS:append:jetson-xavier = " tegra194-nxde-flash-dry"
-- 
2.37.2

